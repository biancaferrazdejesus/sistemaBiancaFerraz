package bean;
// Generated 13/09/2023 17:40:18 by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * VendasBjf generated by hbm2java
 */
@Entity
@Table(name="vendas_bjf"
    ,catalog="db_bianca_ferraz"
)
public class VendasBjf  implements java.io.Serializable {


     private int idvendasBjf;
     private ClienteBjf clienteBjf;
     private FuncionarioBjf funcionarioBjf;
     private Date dataVendas;
     private int valorTotal;
     private ProdutoVendasBjf produtoVendasBjf;

    public VendasBjf() {
    }

	
    public VendasBjf(ClienteBjf clienteBjf, FuncionarioBjf funcionarioBjf, Date dataVendas, int valorTotal) {
        this.clienteBjf = clienteBjf;
        this.funcionarioBjf = funcionarioBjf;
        this.dataVendas = dataVendas;
        this.valorTotal = valorTotal;
    }
    public VendasBjf(ClienteBjf clienteBjf, FuncionarioBjf funcionarioBjf, Date dataVendas, int valorTotal, ProdutoVendasBjf produtoVendasBjf) {
       this.clienteBjf = clienteBjf;
       this.funcionarioBjf = funcionarioBjf;
       this.dataVendas = dataVendas;
       this.valorTotal = valorTotal;
       this.produtoVendasBjf = produtoVendasBjf;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="clienteBjf"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="idvendas_bjf", unique=true, nullable=false)
    public int getIdvendasBjf() {
        return this.idvendasBjf;
    }
    
    public void setIdvendasBjf(int idvendasBjf) {
        this.idvendasBjf = idvendasBjf;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public ClienteBjf getClienteBjf() {
        return this.clienteBjf;
    }
    
    public void setClienteBjf(ClienteBjf clienteBjf) {
        this.clienteBjf = clienteBjf;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public FuncionarioBjf getFuncionarioBjf() {
        return this.funcionarioBjf;
    }
    
    public void setFuncionarioBjf(FuncionarioBjf funcionarioBjf) {
        this.funcionarioBjf = funcionarioBjf;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dataVendas", nullable=false, length=10)
    public Date getDataVendas() {
        return this.dataVendas;
    }
    
    public void setDataVendas(Date dataVendas) {
        this.dataVendas = dataVendas;
    }

    
    @Column(name="valorTotal", nullable=false)
    public int getValorTotal() {
        return this.valorTotal;
    }
    
    public void setValorTotal(int valorTotal) {
        this.valorTotal = valorTotal;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="produtoBjf")
    public ProdutoVendasBjf getProdutoVendasBjf() {
        return this.produtoVendasBjf;
    }
    
    public void setProdutoVendasBjf(ProdutoVendasBjf produtoVendasBjf) {
        this.produtoVendasBjf = produtoVendasBjf;
    }




}


